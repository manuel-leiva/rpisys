#! /bin/bash

# Message color
ERRORCOLOR="\033[1;31m"
INFOCOLOR="\033[0;36m"
MSGCOLOR="\033[1;33m"
ENDCOLOR="\033[0m"


function help
{
    echo "help"
}

while [ $# -gt 0 ]
do
    key="$1"
    case $key in
        -p|--pwd)
        PWD="$2"
        shift
        ;;
        -b|--board)
        BOARD="$2"
        shift
        ;;
        -c|--clean)
        CLEAN="1"
        ;;
        # Help
        -h|--help)
        help
        ;;
        *)
          echo -e "${ERRORCOLOR}Error:${ENDCOLOR} invalid option $1"
          exit
        ;;
    esac
    shift
done

## Check parameters

if [ -z ${PWD} ]; then
   # If PWD is not defined, use the current working path
   PWD=$(pwd)
   exit
else
    # Check if the directory exists
    if [ ! -d ${PWD} ]; then
       echo -e "${ERRORCOLOR}Error:${ENDCOLOR} ${PWD} does not exist."
       exit
    fi
fi

if [ x${CLEAN} = x"1" ]; then
   rm ${PWD}/board.defs
   rm ${PWD}/system-build/makefile/Makefile.local
   exit
fi

if [ -z ${BOARD} ]; then
   echo -e "${ERRORCOLOR}Error:${ENDCOLOR} Option \"--board\" not defined."
   exit
else
    # Check if the file exists
    if [ ! -f ${PWD}/system-build/boards/${BOARD} ]; then
       echo -e "${ERRORCOLOR}Error:${ENDCOLOR} ${BOARD} does not exist."
       exit
    fi
fi

if [ -f ${PWD}/board.defs ]; then
    echo -e "${ERRORCOLOR}ERROR:${ENDCOLOR} The system has been configured previusly"
    echo -e "Run ./configure --clean"
else
    BOARD_DIR=$(dirname "${PWD}/system-build/boards/${BOARD}")

    ln -s ${PWD}/system-build/boards/${BOARD} ${PWD}/board.defs
    echo "# This Makefile is autogenerated" > ${PWD}/system-build/makefile/Makefile.local
    echo "PRJ_ROOT_PATH:=${PWD}" >> ${PWD}/system-build/makefile/Makefile.local
    echo "LOCAL_BOARD_DIR:=${BOARD_DIR}" >> ${PWD}/system-build/makefile/Makefile.local
fi


