#! /bin/bash

# Message color
ERRORCOLOR="\033[1;31m"
INFOCOLOR="\033[0;36m"
MSGCOLOR="\033[1;33m"
ENDCOLOR="\033[0m"

# Symbolic link name
SYM_LINK_NAME="machine.defs"

function help
{
    echo "    Usage: ./configure [OPTION]... [OPTION VALUE]"
    echo
    echo "To define the machine environment"
    echo
    echo "Defaults for the options are specified in brackets."
    echo
    echo "Configuration:"
    echo "  -h, --help           display this help and exit"
    echo "  -m, --machine file   install machine enviroment"
    echo "  -c, --clean          remove machine installed"
    echo
    exit 0

}

while [ $# -gt 0 ]
do
    key="$1"
    case $key in
        -p|--pwd)
        PWD="$2"
        shift
        ;;
        -m|--machine)
        MACHINE="$2"
        shift
        ;;
        -c|--clean)
        CLEAN="1"
        ;;
        # Help
        -h|--help)
        help
        ;;
        *)
          echo -e "${ERRORCOLOR}Error:${ENDCOLOR} invalid option $1"
          exit
        ;;
    esac
    shift
done

## Check parameters

if [ -z ${PWD} ]; then
   # If PWD is not defined, use the current working path
   PWD=$(pwd)
   exit
else
    # Check if the directory exists
    if [ ! -d ${PWD} ]; then
       echo -e "${ERRORCOLOR}Error:${ENDCOLOR} ${PWD} does not exist."
       exit
    fi
fi

if [ x${CLEAN} = x"1" ]; then

    if [ -f ${PWD}/${SYM_LINK_NAME} ]; then
        rm ${PWD}/${SYM_LINK_NAME}
        rm ${PWD}/system-build/makefile/Makefile.local
   else
    echo -e "${ERRORCOLOR}ERROR:${ENDCOLOR} The machine has not been configured previously"
   fi
   exit
fi

if [ -z ${MACHINE} ]; then
   echo -e "${ERRORCOLOR}Error:${ENDCOLOR} Option \"--machine\" not defined."
   exit
else
    # Check if the file exists
    if [ ! -f ${PWD}/${MACHINE} ]; then
       echo -e "${ERRORCOLOR}Error:${ENDCOLOR} ${MACHINE} does not exist."
       exit
    fi
fi

if [ -f ${PWD}/${SYM_LINK_NAME} ]; then
    echo -e "${ERRORCOLOR}ERROR:${ENDCOLOR} The machine has been configured previously"
    echo -e "Run ./configure --clean"
    exit
fi
MACHINE_DIR=$(dirname "${PWD}/${MACHINE}")

ln -s ${PWD}/${MACHINE} ${PWD}/${SYM_LINK_NAME}
echo "# This Makefile is autogenerated" > ${PWD}/system-build/makefile/Makefile.local
echo "PRJ_ROOT_PATH:=${PWD}" >> ${PWD}/system-build/makefile/Makefile.local
echo "LOCAL_BOARD_PATH:=${MACHINE_DIR}" >> ${PWD}/system-build/makefile/Makefile.local

echo "# Commands" >> ${PWD}/system-build/makefile/Makefile.local

# Check echo version
ECHO=$(which echo)
VERSION=$( ${ECHO} --version | head -n1 | awk '{print $NF}')

if [ $VERSION == "8.21" ]; then
    echo "ECHO:=echo -e" >> ${PWD}/system-build/makefile/Makefile.local
fi
if [ $VERSION == "8.25" ]; then
    echo "ECHO:=echo" >> ${PWD}/system-build/makefile/Makefile.local
fi


