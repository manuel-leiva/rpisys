# Include board definitions
include ../../machine.defs
# Include local configuration
include ../../system-build/makefile/Makefile.local
# Include common recipes and definitions
include ../../system-build/makefile/Makefile.common

# Private definitions ##########################################################

PKGNAME := $(notdir $(shell pwd))

CROSS_COMPILE := $(MACHINE_TOOLCHAIN_PATH)/$(MACHINE_TOOLCHAIN_PREFIX)
LIB_DL_URL_FILE = $(AUTOTOOLS_DL_URL)$(AUTOTOOLS_NAME_TAR)
LIB_DL_TAR_PATH = $(DOWNLOADDIR)/$(AUTOTOOLS_NAME_TAR)
LIB_PKG_PATH = $(PRJ_ROOT_PATH)/libraries/$(PKGNAME)


LIB_MACHINE_LIBS_DIR:=board-libs
LIB_HOST_LIBS_DIR:=host-libs

LIB_PREFIX_INC_DIR:=$(PRJ_ROOT_PATH)/libraries/$(LIB_HOST_LIBS_DIR)

# Add standard include files and libraries location
LIB_CFLAGS+=-I${LIB_PREFIX_INC_DIR}/usr/include
LIB_LDFLAGS+=-L$(PRJ_ROOT_PATH)/libraries/$(LIB_HOST_LIBS_DIR)$(MACHINE_LIBRARY_MACHINE_INSTALLDIR)


export DESTDIR=$(PRJ_ROOT_PATH)/libraries/$(AUTOTOOLS_MACHINE_LIBS_DIR)/
# PKG_CONFIG_LIBDIR: Replaces the default pkg-config search directory.
export PKG_CONFIG_LIBDIR=$(PRJ_ROOT_PATH)/libraries/$(AUTOTOOLS_HOST_LIBS_DIR)/$(MACHINE_LIBRARY_MACHINE_INSTALLDIR)/pkgconfig


# Create parameter list to download the package
ifdef PKGNAME
LINUX_DOWNLOAD_SCRIPT_PARAMS=--pkg-name ${PKGNAME}
endif
ifdef LIB_NAME_TAR
LINUX_DOWNLOAD_SCRIPT_PARAMS+=--pkg-target-name  ${LIB_NAME_TAR}
endif
ifdef MACHINE_PRJ_DOWNLOAD_PATH
LINUX_DOWNLOAD_SCRIPT_PARAMS+=--dl-path ${MACHINE_PRJ_DOWNLOAD_PATH}
endif
ifdef LIB_DL_URL
LINUX_DOWNLOAD_SCRIPT_PARAMS+=--dl-url ${LIB_DL_URL}
endif
ifdef  LIB_SHA1SUM
LINUX_DOWNLOAD_SCRIPT_PARAMS+=--sha1sum ${LIB_SHA1SUM}
endif
ifdef LIB_BRANCH
LINUX_DOWNLOAD_SCRIPT_PARAMS+=--branch ${LIB_BRANCH}
endif
ifdef LIB_GIT_DEPTH
LINUX_DOWNLOAD_SCRIPT_PARAMS+=--git-depth ${LIB_GIT_DEPTH}
endif

.PHONY: all clean help download install

# Public targets ###############################################################

all: lib-make

clean: lib-revpatch
	@$(ECHO) "${MSG_INFO}  Clean ${PKGNAME}${MSG_END} "
# Remove flags files
	$(V) $(RM) lib-revpatch \
	lib-patch \
	lib-make \
	lib-install \
	lib-download
# Remove package directory
	$(V) $(RM) $(PKGNAME)

# Alias target to download the package
download: lib-download

# Private targets ##############################################################

lib-download:
	@$(ECHO) "${MSG_INFO}  Download ${PKGNAME}${MSG_END}"
	$(V) $(PRJ_ROOT_PATH)/system-build/scripts/download-package.sh \
    ${LINUX_DOWNLOAD_SCRIPT_PARAMS}
	$(V) touch $@

# lib-revpatch:
# Parameters: target_prefix, dependecies, package-path, message
$(eval $(call COMMON_TARGET_REVPATCH,lib,,${LIB_PKG_PATH},${PKGNAME}))

# lib-patch:
# Parameters: target_prefix, dependecies, package-path, message
$(eval $(call COMMON_TARGET_PATCH,lib,lib-download,${LIB_PKG_PATH},${PKGNAME}))

lib-make: lib-patch
	@    $(ECHO) "${MSG_INFO}  Build ${PKGNAME}${MSG_END}"
	$(MAKE) ${PKGNAME} CXX=${CROSS_COMPILE}g++ AR=${CROSS_COMPILE}ar CC=${CROSS_COMPILE}gcc RANLIB=${CROSS_COMPILE}ranlib CFLAGS=${LIB_CFLAGS} LDFLAGS=${LIB_LDFLAGS} DESTDIR=$(PRJ_ROOT_PATH)/libraries/${PKGNAME}/install $(LIB_MAKE_FLAGS)
	$(V) touch $@

generic-make-install: generic-make
	@    $(ECHO) "${MSG_INFO}  Make install ${PKGNAME}${MSG_END}"
	$(V) mkdir -p install
	$(V) DESTDIR=$(PRJ_ROOT_PATH)/libraries/${PKGNAME}/install $(MAKE) ${PKGNAME} install $(MAKE_FLAGS)
	$(V) cp -ar $(PRJ_ROOT_PATH)/libraries/${PKGNAME}/install/* $(PRJ_ROOT_PATH)/libraries/$(AUTOTOOLS_MACHINE_LIBS_DIR)/
	$(V) $(PRJ_ROOT_PATH)/system-build/scripts/autotools-change-prefix.sh ${PKGNAME} $(PRJ_ROOT_PATH)/libraries/$(AUTOTOOLS_HOST_LIBS_DIR) ${MACHINE_LIBRARY_MACHINE_INSTALLDIR}
	$(V) cp -ar $(PRJ_ROOT_PATH)/libraries/${PKGNAME}/install/* $(PRJ_ROOT_PATH)/libraries/$(AUTOTOOLS_HOST_LIBS_DIR)/
	$(V) $(RM) install
	$(V) touch $@

# Alias target to download the package
install:
	@    $(ECHO) "${MSG_WARN}  Make install not supported yet ${PKGNAME}${MSG_END}"
	$(V) $(MAKE) ${PKGNAME} install CXX=${CROSS_COMPILE}g++ AR=${CROSS_COMPILE}ar CC=${CROSS_COMPILE}gcc RANLIB=${CROSS_COMPILE}ranlib CFLAGS=${LIB_CFLAGS} LDFLAGS=${LIB_LDFLAGS} DESTDIR=$(PRJ_ROOT_PATH)/libraries/${PKGNAME}/install $(LIB_MAKE_INSTALL_FLAGS)
	$(V) $(MKDIR) $(PRJ_ROOT_PATH)/libraries/$(COMMON_LIB_MACHINE_LIBS_DIR)
	$(V) $(MKDIR) $(PRJ_ROOT_PATH)/libraries/$(COMMON_LIB_HOST_LIBS_DIR)
	$(V) $(PRJ_ROOT_PATH)/system-build/scripts/autotools-lib-installer.sh \
        --pkg-name ${PKGNAME} \
        --host-prefix ${PRJ_ROOT_PATH}/libraries/${COMMON_LIB_HOST_LIBS_DIR} \
        --libs-path ${MACHINE_LIBRARY_MACHINE_INSTALLDIR} \
        --libsrc-path $(PRJ_ROOT_PATH)/libraries/${PKGNAME}/install/ \
        --boarddest-path $(PRJ_ROOT_PATH)/libraries/$(COMMON_LIB_MACHINE_LIBS_DIR) \
        --hostdest-path $(PRJ_ROOT_PATH)/libraries/$(COMMON_LIB_HOST_LIBS_DIR)

help:
	@$(ECHO) "  Targets:"
	@$(ECHO) "    all:       Build autotools package"
	@$(ECHO) "    install:   Install autotools package"
	@$(ECHO) "    download:  Download autotools package"
	@$(ECHO) "  Variables"
	@$(ECHO) "    AUTOTOOLS_DL_URL    : URL address"
	@$(ECHO) "    AUTOTOOLS_NAME_TAR  : Tar package name"
	@$(ECHO) "    AUTOTOOLS_FLAGS     : configure script flags"

help-debug:
	@$(ECHO) "    autotools-debug-var:            Show variables used during build process"
	@$(ECHO) "    autotools-debug-libs-installed: Show the list of libraries installed using: pkg-config --list-all"

generic-debug-var:
	@$(ECHO) PKGNAME: ${PKGNAME}
	@$(ECHO) DESTDIR: ${DESTDIR}
	@$(ECHO) PKG_CONFIG_LIBDIR: ${PKG_CONFIG_LIBDIR}
	@$(ECHO) LIB_CFLAGS: ${LIB_CFLAGS}
	@$(ECHO) LIB_LDFLAGS: ${LIB_LDFLAGS}
	@$(ECHO) LIB_MAKE_FLAGS: ${LIB_MAKE_FLAGS}
	@$(ECHO) AUTOTOOLS_DL_URL_FILE: ${AUTOTOOLS_DL_URL_FILE}
	@$(ECHO) AUTOTOOLS_DL_TAR_PATH: ${AUTOTOOLS_DL_TAR_PATH}
	@$(ECHO) AUTOTOOLS_PKG_PATH: ${AUTOTOOLS_PKG_PATH}

generic-debug-libs-installed:
	@pkg-config --list-all
